{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/esm/mixins/form-options.js","webpack:///./node_modules/bootstrap-vue/esm/components/form-radio/form-radio-group.js","webpack:///./node_modules/bootstrap-vue/esm/components/form-radio/form-radio.js","webpack:///./node_modules/bootstrap-vue/esm/mixins/form-custom.js","webpack:///./node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox.js","webpack:///./node_modules/bootstrap-vue/esm/utils/loose-index-of.js","webpack:///./node_modules/bootstrap-vue/esm/mixins/form-radio-check.js","webpack:///./node_modules/bootstrap-vue/esm/mixins/form-radio-check-group.js"],"names":["OPTIONS_OBJECT_DEPRECATED_MSG","props","disabledField","htmlField","options","textField","valueField","formOptionsMixin","extend","computed","formOptions","this","normalizeOptions","methods","normalizeOption","option","key","arguments","length","undefined","value","text","String","html","disabled","Boolean","_this","map","$options","name","BFormRadioGroup","mixins","provide","bvRadioGroup","isRadioGroup","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","BFormRadio","inject","bvGroup","from","default","watch","computedLocalChecked","newValue","oldValue","$emit","plain","formCustomMixin","custom","_objectSpread2","array","MODEL_PROP_NAME_INDETERMINATE","MODEL_EVENT_NAME_INDETERMINATE","BFormCheckbox","isChecked","checked","isRadio","setIndeterminate","mounted","computedLocalCheckedWatcher","$input","$refs","input","indeterminate","handleChange","_ref","_ref$target","uncheckedValue","localChecked","index","concat","slice","$nextTick","isGroup","state","_watch","_methods","_makeModelMixin","defaultValue","modelMixin","mixin","modelProps","MODEL_PROP_NAME","prop","MODEL_EVENT_NAME","event","ariaLabel","ariaLabelledby","button","buttonVariant","inline","formRadioCheckMixin","inheritAttrs","data","hasFocus","get","set","isBtnMode","buttons","isPlain","isCustom","isSwitch","switches","switch","isInline","isDisabled","isRequired","computedName","required","groupName","computedForm","form","computedSize","size","computedState","computedButtonVariant","buttonClasses","computedAttrs","bvAttrs","id","safeId","type","_ref2","render","h","$content","normalizeSlot","class","stateClass","directives","attrs","domProps","on","change","focus","handleFocus","blur","ref","$button","$label","for","style","PASS_DOWN_ATTRS","ariaInvalid","stacked","validated","formRadioCheckGroupMixin","groupClasses","classes","$attrs","optionComponent","$inputs","computedAriaInvalid","role","tabindex"],"mappings":"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","file":"js/chunk-6b85d184.1448cdb7.js","sourcesContent":["import { Vue } from '../vue';\nimport { PROP_TYPE_ARRAY_OBJECT, PROP_TYPE_STRING } from '../constants/props';\nimport { get } from '../utils/get';\nimport { stripTags } from '../utils/html';\nimport { isArray, isPlainObject, isUndefined } from '../utils/inspect';\nimport { keys } from '../utils/object';\nimport { makeProp, makePropsConfigurable } from '../utils/props';\nimport { warn } from '../utils/warn'; // --- Constants ---\n\nvar OPTIONS_OBJECT_DEPRECATED_MSG = 'Setting prop \"options\" to an object is deprecated. Use the array format instead.'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabledField: makeProp(PROP_TYPE_STRING, 'disabled'),\n  htmlField: makeProp(PROP_TYPE_STRING, 'html'),\n  options: makeProp(PROP_TYPE_ARRAY_OBJECT, []),\n  textField: makeProp(PROP_TYPE_STRING, 'text'),\n  valueField: makeProp(PROP_TYPE_STRING, 'value')\n}, 'formOptionControls'); // --- Mixin ---\n// @vue/component\n\nexport var formOptionsMixin = Vue.extend({\n  props: props,\n  computed: {\n    formOptions: function formOptions() {\n      return this.normalizeOptions(this.options);\n    }\n  },\n  methods: {\n    normalizeOption: function normalizeOption(option) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      // When the option is an object, normalize it\n      if (isPlainObject(option)) {\n        var value = get(option, this.valueField);\n        var text = get(option, this.textField);\n        return {\n          value: isUndefined(value) ? key || text : value,\n          text: stripTags(String(isUndefined(text) ? key : text)),\n          html: get(option, this.htmlField),\n          disabled: Boolean(get(option, this.disabledField))\n        };\n      } // Otherwise create an `<option>` object from the given value\n\n\n      return {\n        value: key || option,\n        text: stripTags(String(option)),\n        disabled: false\n      };\n    },\n    normalizeOptions: function normalizeOptions(options) {\n      var _this = this;\n\n      // Normalize the given options array\n      if (isArray(options)) {\n        return options.map(function (option) {\n          return _this.normalizeOption(option);\n        });\n      } else if (isPlainObject(options)) {\n        // Deprecate the object options format\n        warn(OPTIONS_OBJECT_DEPRECATED_MSG, this.$options.name); // Normalize a `options` object to an array of options\n\n        return keys(options).map(function (key) {\n          return _this.normalizeOption(options[key] || {}, key);\n        });\n      } // If not an array or object, return an empty array\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n  }\n});","import { Vue } from '../../vue';\nimport { NAME_FORM_RADIO_GROUP } from '../../constants/components';\nimport { makePropsConfigurable } from '../../utils/props';\nimport { formRadioCheckGroupMixin, props as formRadioCheckGroupProps } from '../../mixins/form-radio-check-group'; // --- Props ---\n\nexport var props = makePropsConfigurable(formRadioCheckGroupProps, NAME_FORM_RADIO_GROUP); // --- Main component ---\n// @vue/component\n\nexport var BFormRadioGroup = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_RADIO_GROUP,\n  mixins: [formRadioCheckGroupMixin],\n  provide: function provide() {\n    return {\n      bvRadioGroup: this\n    };\n  },\n  props: props,\n  computed: {\n    isRadioGroup: function isRadioGroup() {\n      return true;\n    }\n  }\n});","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_FORM_RADIO } from '../../constants/components';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { sortKeys } from '../../utils/object';\nimport { makePropsConfigurable } from '../../utils/props';\nimport { formControlMixin, props as formControlProps } from '../../mixins/form-control';\nimport { MODEL_EVENT_NAME, formRadioCheckMixin, props as formRadioCheckProps } from '../../mixins/form-radio-check';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id'; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formControlProps), formRadioCheckProps), formSizeProps), formStateProps)), NAME_FORM_RADIO); // --- Main component ---\n// @vue/component\n\nexport var BFormRadio = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_RADIO,\n  mixins: [idMixin, formRadioCheckMixin, // Includes shared render function\n  formControlMixin, formSizeMixin, formStateMixin],\n  inject: {\n    bvGroup: {\n      from: 'bvRadioGroup',\n      default: false\n    }\n  },\n  props: props,\n  watch: {\n    computedLocalChecked: function computedLocalChecked(newValue, oldValue) {\n      if (!looseEqual(newValue, oldValue)) {\n        this.$emit(MODEL_EVENT_NAME, newValue);\n      }\n    }\n  }\n});","import { Vue } from '../vue';\nimport { PROP_TYPE_BOOLEAN } from '../constants/props';\nimport { makeProp, makePropsConfigurable } from '../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  plain: makeProp(PROP_TYPE_BOOLEAN, false)\n}, 'formControls'); // --- Mixin ---\n// @vue/component\n\nexport var formCustomMixin = Vue.extend({\n  props: props,\n  computed: {\n    custom: function custom() {\n      return !this.plain;\n    }\n  }\n});","var _objectSpread2;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../vue';\nimport { NAME_FORM_CHECKBOX } from '../../constants/components';\nimport { EVENT_NAME_CHANGE, MODEL_EVENT_NAME_PREFIX } from '../../constants/events';\nimport { PROP_TYPE_ANY, PROP_TYPE_BOOLEAN } from '../../constants/props';\nimport { isArray } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { looseIndexOf } from '../../utils/loose-index-of';\nimport { sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { MODEL_EVENT_NAME, formRadioCheckMixin, props as formRadioCheckProps } from '../../mixins/form-radio-check'; // --- Constants ---\n\nvar MODEL_PROP_NAME_INDETERMINATE = 'indeterminate';\nvar MODEL_EVENT_NAME_INDETERMINATE = MODEL_EVENT_NAME_PREFIX + MODEL_PROP_NAME_INDETERMINATE; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread({}, formRadioCheckProps), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, MODEL_PROP_NAME_INDETERMINATE, makeProp(PROP_TYPE_BOOLEAN, false)), _defineProperty(_objectSpread2, \"switch\", makeProp(PROP_TYPE_BOOLEAN, false)), _defineProperty(_objectSpread2, \"uncheckedValue\", makeProp(PROP_TYPE_ANY, false)), _defineProperty(_objectSpread2, \"value\", makeProp(PROP_TYPE_ANY, true)), _objectSpread2))), NAME_FORM_CHECKBOX); // --- Main component ---\n// @vue/component\n\nexport var BFormCheckbox = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_CHECKBOX,\n  mixins: [formRadioCheckMixin],\n  inject: {\n    bvGroup: {\n      from: 'bvCheckGroup',\n      default: null\n    }\n  },\n  props: props,\n  computed: {\n    isChecked: function isChecked() {\n      var value = this.value,\n          checked = this.computedLocalChecked;\n      return isArray(checked) ? looseIndexOf(checked, value) > -1 : looseEqual(checked, value);\n    },\n    isRadio: function isRadio() {\n      return false;\n    }\n  },\n  watch: _defineProperty({}, MODEL_PROP_NAME_INDETERMINATE, function (newValue, oldValue) {\n    if (!looseEqual(newValue, oldValue)) {\n      this.setIndeterminate(newValue);\n    }\n  }),\n  mounted: function mounted() {\n    // Set initial indeterminate state\n    this.setIndeterminate(this[MODEL_PROP_NAME_INDETERMINATE]);\n  },\n  methods: {\n    computedLocalCheckedWatcher: function computedLocalCheckedWatcher(newValue, oldValue) {\n      if (!looseEqual(newValue, oldValue)) {\n        this.$emit(MODEL_EVENT_NAME, newValue);\n        var $input = this.$refs.input;\n\n        if ($input) {\n          this.$emit(MODEL_EVENT_NAME_INDETERMINATE, $input.indeterminate);\n        }\n      }\n    },\n    handleChange: function handleChange(_ref) {\n      var _this = this;\n\n      var _ref$target = _ref.target,\n          checked = _ref$target.checked,\n          indeterminate = _ref$target.indeterminate;\n      var value = this.value,\n          uncheckedValue = this.uncheckedValue; // Update `computedLocalChecked`\n\n      var localChecked = this.computedLocalChecked;\n\n      if (isArray(localChecked)) {\n        var index = looseIndexOf(localChecked, value);\n\n        if (checked && index < 0) {\n          // Add value to array\n          localChecked = localChecked.concat(value);\n        } else if (!checked && index > -1) {\n          // Remove value from array\n          localChecked = localChecked.slice(0, index).concat(localChecked.slice(index + 1));\n        }\n      } else {\n        localChecked = checked ? value : uncheckedValue;\n      }\n\n      this.computedLocalChecked = localChecked; // Fire events in a `$nextTick()` to ensure the `v-model` is updated\n\n      this.$nextTick(function () {\n        // Change is only emitted on user interaction\n        _this.$emit(EVENT_NAME_CHANGE, localChecked); // If this is a child of a group, we emit a change event on it as well\n\n\n        if (_this.isGroup) {\n          _this.bvGroup.$emit(EVENT_NAME_CHANGE, localChecked);\n        }\n\n        _this.$emit(MODEL_EVENT_NAME_INDETERMINATE, indeterminate);\n      });\n    },\n    setIndeterminate: function setIndeterminate(state) {\n      // Indeterminate only supported in single checkbox mode\n      if (isArray(this.computedLocalChecked)) {\n        state = false;\n      }\n\n      var $input = this.$refs.input;\n\n      if ($input) {\n        $input.indeterminate = state; // Emit update event to prop\n\n        this.$emit(MODEL_EVENT_NAME_INDETERMINATE, state);\n      }\n    }\n  }\n});","import { looseEqual } from './loose-equal'; // Assumes that the first argument is an array\n\nexport var looseIndexOf = function looseIndexOf(array, value) {\n  for (var i = 0; i < array.length; i++) {\n    if (looseEqual(array[i], value)) {\n      return i;\n    }\n  }\n\n  return -1;\n};","var _watch, _methods;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../vue';\nimport { PROP_TYPE_ANY, PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../constants/props';\nimport { EVENT_NAME_CHANGE } from '../constants/events';\nimport { attemptBlur, attemptFocus } from '../utils/dom';\nimport { isBoolean } from '../utils/inspect';\nimport { looseEqual } from '../utils/loose-equal';\nimport { makeModelMixin } from '../utils/model';\nimport { sortKeys } from '../utils/object';\nimport { makeProp, makePropsConfigurable } from '../utils/props';\nimport { attrsMixin } from './attrs';\nimport { formControlMixin, props as formControlProps } from './form-control';\nimport { formCustomMixin, props as formCustomProps } from './form-custom';\nimport { formSizeMixin, props as formSizeProps } from './form-size';\nimport { formStateMixin, props as formStateProps } from './form-state';\nimport { idMixin, props as idProps } from './id';\nimport { normalizeSlotMixin } from './normalize-slot'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('checked', {\n  defaultValue: null\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event;\n\nexport { MODEL_PROP_NAME, MODEL_EVENT_NAME }; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), formControlProps), formSizeProps), formStateProps), formCustomProps), {}, {\n  ariaLabel: makeProp(PROP_TYPE_STRING),\n  ariaLabelledby: makeProp(PROP_TYPE_STRING),\n  // Only applicable in standalone mode (non group)\n  button: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Only applicable when rendered with button style\n  buttonVariant: makeProp(PROP_TYPE_STRING),\n  inline: makeProp(PROP_TYPE_BOOLEAN, false),\n  value: makeProp(PROP_TYPE_ANY)\n})), 'formRadioCheckControls'); // --- Mixin ---\n// @vue/component\n\nexport var formRadioCheckMixin = Vue.extend({\n  mixins: [attrsMixin, idMixin, modelMixin, normalizeSlotMixin, formControlMixin, formSizeMixin, formStateMixin, formCustomMixin],\n  inheritAttrs: false,\n  props: props,\n  data: function data() {\n    return {\n      localChecked: this.isGroup ? this.bvGroup[MODEL_PROP_NAME] : this[MODEL_PROP_NAME],\n      hasFocus: false\n    };\n  },\n  computed: {\n    computedLocalChecked: {\n      get: function get() {\n        return this.isGroup ? this.bvGroup.localChecked : this.localChecked;\n      },\n      set: function set(value) {\n        if (this.isGroup) {\n          this.bvGroup.localChecked = value;\n        } else {\n          this.localChecked = value;\n        }\n      }\n    },\n    isChecked: function isChecked() {\n      return looseEqual(this.value, this.computedLocalChecked);\n    },\n    isRadio: function isRadio() {\n      return true;\n    },\n    isGroup: function isGroup() {\n      // Is this check/radio a child of check-group or radio-group?\n      return !!this.bvGroup;\n    },\n    isBtnMode: function isBtnMode() {\n      // Support button style in single input mode\n      return this.isGroup ? this.bvGroup.buttons : this.button;\n    },\n    isPlain: function isPlain() {\n      return this.isBtnMode ? false : this.isGroup ? this.bvGroup.plain : this.plain;\n    },\n    isCustom: function isCustom() {\n      return this.isBtnMode ? false : !this.isPlain;\n    },\n    isSwitch: function isSwitch() {\n      // Custom switch styling (checkboxes only)\n      return this.isBtnMode || this.isRadio || this.isPlain ? false : this.isGroup ? this.bvGroup.switches : this.switch;\n    },\n    isInline: function isInline() {\n      return this.isGroup ? this.bvGroup.inline : this.inline;\n    },\n    isDisabled: function isDisabled() {\n      // Child can be disabled while parent isn't, but is always disabled if group is\n      return this.isGroup ? this.bvGroup.disabled || this.disabled : this.disabled;\n    },\n    isRequired: function isRequired() {\n      // Required only works when a name is provided for the input(s)\n      // Child can only be required when parent is\n      // Groups will always have a name (either user supplied or auto generated)\n      return this.computedName && (this.isGroup ? this.bvGroup.required : this.required);\n    },\n    computedName: function computedName() {\n      // Group name preferred over local name\n      return (this.isGroup ? this.bvGroup.groupName : this.name) || null;\n    },\n    computedForm: function computedForm() {\n      return (this.isGroup ? this.bvGroup.form : this.form) || null;\n    },\n    computedSize: function computedSize() {\n      return (this.isGroup ? this.bvGroup.size : this.size) || '';\n    },\n    computedState: function computedState() {\n      return this.isGroup ? this.bvGroup.computedState : isBoolean(this.state) ? this.state : null;\n    },\n    computedButtonVariant: function computedButtonVariant() {\n      // Local variant preferred over group variant\n      var buttonVariant = this.buttonVariant;\n\n      if (buttonVariant) {\n        return buttonVariant;\n      }\n\n      if (this.isGroup && this.bvGroup.buttonVariant) {\n        return this.bvGroup.buttonVariant;\n      }\n\n      return 'secondary';\n    },\n    buttonClasses: function buttonClasses() {\n      var _ref;\n\n      var computedSize = this.computedSize;\n      return ['btn', \"btn-\".concat(this.computedButtonVariant), (_ref = {}, _defineProperty(_ref, \"btn-\".concat(computedSize), computedSize), _defineProperty(_ref, \"disabled\", this.isDisabled), _defineProperty(_ref, \"active\", this.isChecked), _defineProperty(_ref, \"focus\", this.hasFocus), _ref)];\n    },\n    computedAttrs: function computedAttrs() {\n      var disabled = this.isDisabled,\n          required = this.isRequired;\n      return _objectSpread(_objectSpread({}, this.bvAttrs), {}, {\n        id: this.safeId(),\n        type: this.isRadio ? 'radio' : 'checkbox',\n        name: this.computedName,\n        form: this.computedForm,\n        disabled: disabled,\n        required: required,\n        'aria-required': required || null,\n        'aria-label': this.ariaLabel || null,\n        'aria-labelledby': this.ariaLabelledby || null\n      });\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function () {\n    this[\"\".concat(MODEL_PROP_NAME, \"Watcher\")].apply(this, arguments);\n  }), _defineProperty(_watch, \"computedLocalChecked\", function computedLocalChecked() {\n    this.computedLocalCheckedWatcher.apply(this, arguments);\n  }), _watch),\n  methods: (_methods = {}, _defineProperty(_methods, \"\".concat(MODEL_PROP_NAME, \"Watcher\"), function Watcher(newValue) {\n    if (!looseEqual(newValue, this.computedLocalChecked)) {\n      this.computedLocalChecked = newValue;\n    }\n  }), _defineProperty(_methods, \"computedLocalCheckedWatcher\", function computedLocalCheckedWatcher(newValue, oldValue) {\n    if (!looseEqual(newValue, oldValue)) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n  }), _defineProperty(_methods, \"handleChange\", function handleChange(_ref2) {\n    var _this = this;\n\n    var checked = _ref2.target.checked;\n    var value = this.value;\n    var localChecked = checked ? value : null;\n    this.computedLocalChecked = value; // Fire events in a `$nextTick()` to ensure the `v-model` is updated\n\n    this.$nextTick(function () {\n      // Change is only emitted on user interaction\n      _this.$emit(EVENT_NAME_CHANGE, localChecked); // If this is a child of a group, we emit a change event on it as well\n\n\n      if (_this.isGroup) {\n        _this.bvGroup.$emit(EVENT_NAME_CHANGE, localChecked);\n      }\n    });\n  }), _defineProperty(_methods, \"handleFocus\", function handleFocus(event) {\n    // When in buttons mode, we need to add 'focus' class to label when input focused\n    // As it is the hidden input which has actual focus\n    if (event.target) {\n      if (event.type === 'focus') {\n        this.hasFocus = true;\n      } else if (event.type === 'blur') {\n        this.hasFocus = false;\n      }\n    }\n  }), _defineProperty(_methods, \"focus\", function focus() {\n    if (!this.isDisabled) {\n      attemptFocus(this.$refs.input);\n    }\n  }), _defineProperty(_methods, \"blur\", function blur() {\n    if (!this.isDisabled) {\n      attemptBlur(this.$refs.input);\n    }\n  }), _methods),\n  render: function render(h) {\n    var isRadio = this.isRadio,\n        isBtnMode = this.isBtnMode,\n        isPlain = this.isPlain,\n        isCustom = this.isCustom,\n        isInline = this.isInline,\n        isSwitch = this.isSwitch,\n        computedSize = this.computedSize,\n        bvAttrs = this.bvAttrs;\n    var $content = this.normalizeSlot();\n    var $input = h('input', {\n      class: [{\n        'form-check-input': isPlain,\n        'custom-control-input': isCustom,\n        // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911\n        'position-static': isPlain && !$content\n      }, isBtnMode ? '' : this.stateClass],\n      directives: [{\n        name: 'model',\n        value: this.computedLocalChecked\n      }],\n      attrs: this.computedAttrs,\n      domProps: {\n        value: this.value,\n        checked: this.isChecked\n      },\n      on: _objectSpread({\n        change: this.handleChange\n      }, isBtnMode ? {\n        focus: this.handleFocus,\n        blur: this.handleFocus\n      } : {}),\n      key: 'input',\n      ref: 'input'\n    });\n\n    if (isBtnMode) {\n      var $button = h('label', {\n        class: this.buttonClasses\n      }, [$input, $content]);\n\n      if (!this.isGroup) {\n        // Standalone button mode, so wrap in 'btn-group-toggle'\n        // and flag it as inline-block to mimic regular buttons\n        $button = h('div', {\n          class: ['btn-group-toggle', 'd-inline-block']\n        }, [$button]);\n      }\n\n      return $button;\n    } // If no label content in plain mode we dont render the label\n    // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2911\n\n\n    var $label = h();\n\n    if (!(isPlain && !$content)) {\n      $label = h('label', {\n        class: {\n          'form-check-label': isPlain,\n          'custom-control-label': isCustom\n        },\n        attrs: {\n          for: this.safeId()\n        }\n      }, $content);\n    }\n\n    return h('div', {\n      class: [_defineProperty({\n        'form-check': isPlain,\n        'form-check-inline': isPlain && isInline,\n        'custom-control': isCustom,\n        'custom-control-inline': isCustom && isInline,\n        'custom-checkbox': isCustom && !isRadio && !isSwitch,\n        'custom-switch': isSwitch,\n        'custom-radio': isCustom && isRadio\n      }, \"b-custom-control-\".concat(computedSize), computedSize && !isBtnMode), bvAttrs.class],\n      style: bvAttrs.style\n    }, [$input, $label]);\n  }\n});","var _watch;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../vue';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_STRING } from '../constants/props';\nimport { SLOT_NAME_FIRST } from '../constants/slots';\nimport { htmlOrText } from '../utils/html';\nimport { looseEqual } from '../utils/loose-equal';\nimport { makeModelMixin } from '../utils/model';\nimport { omit, pick, sortKeys } from '../utils/object';\nimport { makeProp, makePropsConfigurable } from '../utils/props';\nimport { BFormCheckbox } from '../components/form-checkbox/form-checkbox';\nimport { BFormRadio } from '../components/form-radio/form-radio';\nimport { formControlMixin, props as formControlProps } from './form-control';\nimport { formCustomMixin, props as formCustomProps } from './form-custom';\nimport { formOptionsMixin, props as formOptionsProps } from './form-options';\nimport { formSizeMixin, props as formSizeProps } from './form-size';\nimport { formStateMixin, props as formStateProps } from './form-state';\nimport { idMixin, props as idProps } from './id';\nimport { normalizeSlotMixin } from './normalize-slot'; // --- Constants ---\n// Attributes to pass down to checks/radios instead of applying them to the group\n\nvar PASS_DOWN_ATTRS = ['aria-describedby', 'aria-labelledby'];\n\nvar _makeModelMixin = makeModelMixin('checked'),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event;\n\nexport { MODEL_PROP_NAME, MODEL_EVENT_NAME }; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), formControlProps), formOptionsProps), formSizeProps), formStateProps), formCustomProps), {}, {\n  ariaInvalid: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  // Only applicable when rendered with button style\n  buttonVariant: makeProp(PROP_TYPE_STRING),\n  // Render as button style\n  buttons: makeProp(PROP_TYPE_BOOLEAN, false),\n  stacked: makeProp(PROP_TYPE_BOOLEAN, false),\n  validated: makeProp(PROP_TYPE_BOOLEAN, false)\n})), 'formRadioCheckGroups'); // --- Mixin ---\n// @vue/component\n\nexport var formRadioCheckGroupMixin = Vue.extend({\n  mixins: [idMixin, modelMixin, normalizeSlotMixin, formControlMixin, formOptionsMixin, formSizeMixin, formStateMixin, formCustomMixin],\n  inheritAttrs: false,\n  props: props,\n  data: function data() {\n    return {\n      localChecked: this[MODEL_PROP_NAME]\n    };\n  },\n  computed: {\n    inline: function inline() {\n      return !this.stacked;\n    },\n    groupName: function groupName() {\n      // Checks/Radios tied to the same model must have the same name,\n      // especially for ARIA accessibility\n      return this.name || this.safeId();\n    },\n    groupClasses: function groupClasses() {\n      var inline = this.inline,\n          size = this.size,\n          validated = this.validated;\n      var classes = {\n        'was-validated': validated\n      };\n\n      if (this.buttons) {\n        classes = [classes, 'btn-group-toggle', _defineProperty({\n          'btn-group': inline,\n          'btn-group-vertical': !inline\n        }, \"btn-group-\".concat(size), size)];\n      }\n\n      return classes;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    if (!looseEqual(newValue, this.localChecked)) {\n      this.localChecked = newValue;\n    }\n  }), _defineProperty(_watch, \"localChecked\", function localChecked(newValue, oldValue) {\n    if (!looseEqual(newValue, oldValue)) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n  }), _watch),\n  render: function render(h) {\n    var _this = this;\n\n    var isRadioGroup = this.isRadioGroup;\n    var attrs = pick(this.$attrs, PASS_DOWN_ATTRS);\n    var optionComponent = isRadioGroup ? BFormRadio : BFormCheckbox;\n    var $inputs = this.formOptions.map(function (option, index) {\n      var key = \"BV_option_\".concat(index);\n      return h(optionComponent, {\n        props: {\n          // Individual radios or checks can be disabled in a group\n          disabled: option.disabled || false,\n          id: _this.safeId(key),\n          value: option.value // We don't need to include these, since the input's will know they are inside here\n          // form: this.form || null,\n          // name: this.groupName,\n          // required: Boolean(this.name && this.required)\n\n        },\n        attrs: attrs,\n        key: key\n      }, [h('span', {\n        domProps: htmlOrText(option.html, option.text)\n      })]);\n    });\n    return h('div', {\n      class: [this.groupClasses, 'bv-no-focus-ring'],\n      attrs: _objectSpread(_objectSpread({}, omit(this.$attrs, PASS_DOWN_ATTRS)), {}, {\n        'aria-invalid': this.computedAriaInvalid,\n        'aria-required': this.required ? 'true' : null,\n        id: this.safeId(),\n        role: isRadioGroup ? 'radiogroup' : 'group',\n        // Add `tabindex=\"-1\"` to allow group to be focused if needed by screen readers\n        tabindex: '-1'\n      })\n    }, [this.normalizeSlot(SLOT_NAME_FIRST), $inputs, this.normalizeSlot()]);\n  }\n});"],"sourceRoot":""}